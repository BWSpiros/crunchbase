= crunchbase

Library for pulling data from the CrunchBase API.

== Dependencies

The Crunchbase API is entirely JSON-based. By default, if present, the gem will
use the {YAJL gem}[http://github.com/brianmario/yajl-ruby]; if not, it will
fall back to the {JSON gem}[http://flori.github.com/json/]. Please ensure one
of the two is installed.

== Usage

If you already know the permalink for a given entity, you can grab the entry
with the +get+ method.

   require 'crunchbase'
   steve = Crunchbase::Person.get("steve-jobs")
   facebook = Crunchbase::Company.get("facebook")    
   
If you know the name of the entity but not the permalink, you can use the
+find+ method.

    steve = Crunchbase::Person.find("Steve", "Jobs")
    github = Crunchbase::Company.find("Github")

Note that finding using a name performs two HTTP requests internally, the first
returning the permalink associated with the name, and the second which returns
the actual data.

=== Search

Searching the Crunchbase is possible with the Search class.

   s = Crunchbase::Search.find("widgets")
   
You can access the search results by treating the returned Search instance as
an array.

   first_result = s[0]
   s.each { |result| puts result.name }
  
While Search does include the Enumerable module, it does not implement all of 
the methods of Array. If you need to treat the results as an array in a way not
supported, you can call +to_ary+; this prefetches all result pages (if they have
not already been loaded), so it may entail a slight delay, depending on the
number of results.

   all_results = s.to_ary
   result_slice = s[3..6]

=== List all Items

If you've gone insane and want a list of every single item for a given entity
type, you can do so with the +all+ method.

    all_companies = Company.all
    company = all_companies[105]
    
This returns an array containing objects representing each entity. Just like 
Search, the full item can be grabbed with the +entity+ method. Unlike Search,
however, all of the items are pre-fetched, so iterating through the list does
not entail a delay every ten items. Of course, the list is probably enormous,
so it's little consolation.

== Copyright

Copyright (c) 2011-12 Tyler Cunnion. This software is made available under the 
MIT/X11 license. See LICENSE.txt for further details.

I am not affiliated in any way with AOL, TechCrunch, Crunchbase, or anyone
really.